# 1.4 Функции как атрибут класса

class Car:
    model = 'BMW'
    engine = 1.6

    def drive():
        print("Let's go")

# Вызов функции внутри класса
# Не забывайте про оператор вызова( круглые скобочки в самом конце
Car.drive()

getattr(Car, 'drive')()

# Обратиться напрямую к атрибуту-функции(методу) класса через экземпляр
# класса невозможно, возникнет ошибка отсутствия обязательного аргумента:

auto = Car()
auto.drive()

# Если же вы хотите сейчас вызвать атрибут-функцию через экземпляр
# класса, то можете воспользоваться декоратором @staticmethod

class Car:
    model = 'BMW'
    engine = 1.6

   @staticmethod
   def drive():
        print("Let's go")

a = Car()
b = Car()
Car.drive()
getattr(Car, 'drive')()
a.drive()
b.drive()

"""Как видно из примера декоратор @staticmethod позволяет
 вызывать функцию как от класса так и от ЭК"""









